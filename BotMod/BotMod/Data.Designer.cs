//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BotMod {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Data {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Data() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BotMod.Data", typeof(Data).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug Commands:
        ///debug.ModifyDifficulty - Used to access the difficulty menu
        ///debug.RandomLocations - Turns on random locations
        ///debug.MaxPower &lt;integer&gt; - sets the max power to the integer given. Max 999.
        ///debug..
        /// </summary>
        internal static string DebugCommands {
            get {
                return ResourceManager.GetString("DebugCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  1. The robot always starts on a grass cell.          
        /// 2. The robot can move in 4 directions (N, E, S, W).              
        /// 3. The robot cannot make diagonal moves.                         
        /// 4. The robot cannot move beyond the edge of the grid.            
        /// 5. The robot can carry one, two or three people in the           
        ///    passenger bay, depending on which size you are using:         
        ///    If you are using a small passenger bay, you get one slot.     
        ///    If you are using a medium passenger bay, you [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Rules {
            get {
                return ResourceManager.GetString("Rules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0
        ///0
        ///2
        ///2
        ///2
        ///2
        ///0
        ///0
        ///2
        ///2
        ///0
        ///1
        ///1
        ///2
        ///2
        ///2
        ///0
        ///0
        ///2
        ///2
        ///1
        ///1
        ///1
        ///0
        ///0
        ///2
        ///0
        ///0
        ///2
        ///2
        ///2
        ///1
        ///0
        ///0
        ///0
        ///0
        ///0
        ///0
        ///0
        ///0
        ///1
        ///1
        ///0
        ///2
        ///0
        ///2
        ///1
        ///1
        ///0
        ///0
        ///1
        ///1
        ///1
        ///2
        ///1
        ///1
        ///1
        ///1
        ///2
        ///0
        ///1
        ///1
        ///1
        ///1
        ///1
        ///2
        ///2
        ///2
        ///0
        ///0
        ///0
        ///1
        ///1
        ///1
        ///2
        ///2
        ///2
        ///2
        ///0
        ///2
        ///2
        ///0
        ///0
        ///0
        ///0
        ///2
        ///0
        ///2
        ///2
        ///2
        ///0
        ///0
        ///0
        ///0
        ///0
        ///0
        ///0
        ///0
        ///2
        ///1.
        /// </summary>
        internal static string Terrain {
            get {
                return ResourceManager.GetString("Terrain", resourceCulture);
            }
        }
    }
}
